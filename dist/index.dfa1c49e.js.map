{"mappings":"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","sources":["assets/main.js","modules/functions.js","modules/jourMeteo.js","modules/setupButtons.js"],"sourcesContent":["import { toCelsius, displayElement } from \"../modules/functions.js\";\r\nimport { jourMeteo } from \"../modules/jourMeteo.js\";\r\nimport { setUpButtons } from \"../modules/setupButtons.js\";\r\n\r\nexport async function weatherMe(city){\r\n    let meteo = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=77cf7509f6657d267e637e6c2a540ddf`);\r\n    let meteofetched = await meteo.json();\r\n    displayMeteo(meteofetched);\r\n    console.log(\"requête envoyée\");\r\n\r\n    localStorage.setItem(\"meteo\", city);\r\n    localStorage.setItem(\"meteostored\", JSON.stringify(meteofetched));\r\n\r\n}\r\n\r\nlet weather = localStorage.getItem(\"meteostored\");\r\nlet weatherNews = JSON.parse(weather);\r\n\r\nlet newMeteo = localStorage.getItem(\"meteo\");\r\n\r\nconst dataWeek = [];\r\nconst dayWeek = [];\r\nconst dataFeels = [];\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  \r\n   if ( weatherNews !== null) {\r\n      displayMeteo(weatherNews);\r\n   }\r\n\r\n   if ( newMeteo === \"null\") {\r\n      setUpButtons();\r\n   }\r\n  \r\n});\r\n\r\nlet header = document.querySelector(\"header\");\r\n\r\n\r\nlet main = document.querySelector(\"main\");\r\n\r\nfunction displayMeteo(meteo){\r\n\r\nheader.innerHTML=\"\";\r\nmain.innerHTML=\"\";\r\n\r\nlet nomVille = meteo.city.name;\r\nlet paysVille = meteo.city.country;\r\n\r\ndisplayElement(\"div\",`${nomVille}`,header, \"ville\");\r\ndisplayElement(\"div\", `${paysVille}`, header, \"pays\"); \r\n\r\nsetUpButtons();\r\n\r\nfor (let i = 0 ; i < meteo.list.length ; i++){\r\n  let date = new Date(meteo.list[i].dt_txt);\r\n\r\n  let temp = toCelsius(meteo.list[i].main.temp);\r\n  let feels = toCelsius(meteo.list[i].main.feels_like);\r\n  let minT = toCelsius(meteo.list[i].main.temp_min);\r\n  let maxT = toCelsius(meteo.list[i].main.temp_max);\r\n\r\n  let humi = meteo.list[i].main.humidity\r\n  let press = meteo.list[i].main.pressure;\r\n  let windS = meteo.list[i].wind.speed;\r\n  let windO = meteo.list[i].wind.deg;\r\n  let clouds = meteo.list[i].clouds.all;\r\n  let special = meteo.list[i].weather[0].main;\r\n\r\n  let infos = new jourMeteo(\r\n   date,\r\n   temp,\r\n   minT,\r\n   maxT,\r\n   feels,\r\n   humi,\r\n   press,\r\n   windS,\r\n   windO,\r\n   clouds,\r\n   special\r\n   );\r\n\r\n   dataWeek.push(temp);\r\n   dataFeels.push(feels);\r\n   dayWeek.push(`${infos.fullDate} - ${infos.time}`);\r\n\r\n  let element = document.createElement(\"article\");\r\n  element.setAttribute(\"id\",`weatherLine-${i}`);\r\n  main.appendChild(element);\r\n\r\n    for (let key in infos) {\r\n      if (key == \"cloudy\") {\r\n        displayElement(\"img\", \"\", element, `images-${i}`);\r\n        let weatherIcon = document.querySelector(`.images-${i}`);\r\n        weatherIcon.classList.add(\"image-weather\");\r\n        weatherIcon.src = infos.cloudy;\r\n      } else if (key == \"winddir\") {\r\n        displayElement(\"img\", \"\", element, `images-wind-${i}`);\r\n        let weatherIcon = document.querySelector(`.images-wind-${i}`);\r\n        weatherIcon.classList.add(\"image-wind\");\r\n        weatherIcon.src = \"./assets/svg/arrow.svg\";\r\n        weatherIcon.style.transform = `rotate(${0 + infos.winddir}deg)`;\r\n      } else {\r\n        displayElement(\"div\", `${infos[key]}`, element, key);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ndocument.getElementById(\"darkMode\").addEventListener(\"click\", () => {\r\n   document.documentElement.classList.toggle(\"dark-mode\");\r\n})\r\n\r\n\r\nexport { dataWeek, dayWeek, dataFeels }","function toCelsius(temp){\r\n    let celsius = Math.floor(temp - 273.15);\r\n    return celsius;\r\n}\r\n\r\nfunction monthOfYear(month){\r\n    const Months = [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"July\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\"\r\n    ];\r\n    return Months[month];\r\n}\r\n\r\nfunction dayOfWeek(day){\r\n    const Days = [\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thu\",\r\n    \"Fri\",\r\n    \"Sat\",\r\n    \"Sun\"\r\n];\r\n    return Days[day];\r\n}\r\n    \r\nfunction displayElement(type, content, parent, what){\r\n\r\n    let element = document.createElement(type);\r\n    let elementText = document.createTextNode(content);\r\n    element.appendChild(elementText);\r\n    parent.appendChild(element);\r\n    element.classList.add(what);\r\n\r\n}\r\n\r\nfunction cloudOrNot(icon){\r\n\r\n    let icone;\r\n\r\n    let weatherIcon = [\"./assets/svg/cloud.svg\", \"./assets/svg/drizzle.svg\", \"./assets/svg/rain.svg\", \"./assets/svg/sun.svg\", \"./assets/svg/suncloud.svg\", \"./assets/svg/snow.svg\"];\r\n\r\n   switch (icon){\r\n    case \"Rain\":\r\n        icone = weatherIcon[2];\r\n        break; \r\n    case \"Clouds\":\r\n        icone = weatherIcon[0];\r\n        break;\r\n    \r\n    case \"Snow\":\r\n        icone = weatherIcon[5];\r\n        break;\r\n\r\n    case \"Clear\": \r\n        icone = weatherIcon[3];\r\n        break;\r\n   }\r\n\r\n    return  icone;\r\n   \r\n}\r\n\r\nexport { toCelsius, monthOfYear, dayOfWeek, displayElement, cloudOrNot };","import { dayOfWeek, monthOfYear, cloudOrNot } from \"./functions.js\";\r\n\r\nexport class jourMeteo{\r\n\r\n    constructor(date, temp, min, max, feels, humidity, pressure, wind, winddir, clouds, main){\r\n    this.fullDate = `${dayOfWeek(date.getDay())} ${date.getDate()} ${monthOfYear(date.getMonth())} ${date.getFullYear()}`;\r\n    this.time = ` ${ ( date.getHours() <= 10 ) ? `0${date.getHours()}` : `${date.getHours()}`}:${ ( date.getMinutes() <= 10 ) ? `0${date.getMinutes()}` : `${date.getMinutes()}`}`;\r\n    this.temp = `${temp}°C`;\r\n    this.min = `${min}°C`;\r\n    this.max = `${max}°C`;\r\n    this.feels = `${feels}°C`;\r\n    this.humidity = `${humidity}%`;\r\n    this.pressure = `${pressure} hPa`;\r\n    this.wind = `${wind}m/s`;\r\n    this.winddir = winddir;\r\n    this.clouds = `${clouds}%`;\r\n    this.cloudy = `${cloudOrNot(main)}`;\r\n}\r\n\r\n}","import { displayElement } from \"../modules/functions.js\";\r\nimport { weatherMe } from \"../assets/main.js\";\r\n\r\nlet header = document.querySelector(\"header\");\r\n\r\nfunction setUpButtons(){\r\n    displayElement(\"label\", \"Enter a city name\", header , \"townToCheckLabel\");\r\n    displayElement(\"input\", \"\", header , \"townToCheck\");\r\n    displayElement(\"button\", \"Get weather forecasts\", header, \"forecast__Button\"); \r\n    \r\n    \r\n    let forecast = document.querySelector(\".forecast__Button\");\r\n    forecast.setAttribute(\"aria-label\", \"get new weather forecast\");\r\n    \r\n    let forecastInput = document.querySelector(\".townToCheck\");\r\n    forecastInput.setAttribute(\"id\", \"townToCheck\");\r\n    \r\n    let label = document.querySelector(\".townToCheckLabel\");\r\n    label.setAttribute(\"for\", \"townToCheck\");\r\n    \r\n    let town;\r\n    \r\n    forecastInput.addEventListener(\"keyup\", (e) => {\r\n         town = e.target.value;\r\n    \r\n         if (e.code == \"Enter\"){\r\n    \r\n            weatherMe(town);\r\n            setUpButtons();\r\n         }\r\n    \r\n    } )\r\n    \r\n    \r\n    forecast.addEventListener(\"click\", ()=> {\r\n       weatherMe(town);\r\n       setUpButtons();\r\n    } )\r\n    }\r\n\r\nexport { setUpButtons }"],"names":["$3OHhi","parcelRequire","async","$6bae2a59cb97dd5c$export$ad84141b6eac4449","city","meteo","fetch","meteofetched","json","$6bae2a59cb97dd5c$var$displayMeteo","console","log","localStorage","setItem","JSON","stringify","$6bae2a59cb97dd5c$var$weather","getItem","$6bae2a59cb97dd5c$var$weatherNews","parse","$6bae2a59cb97dd5c$var$newMeteo","$6bae2a59cb97dd5c$export$e9b0ffe23adcedab","$6bae2a59cb97dd5c$export$9a92a6bab2e8f6d","$6bae2a59cb97dd5c$export$31af099439438be4","window","addEventListener","$gohEa","setUpButtons","$6bae2a59cb97dd5c$var$header","document","querySelector","$6bae2a59cb97dd5c$var$main","innerHTML","nomVille","name","paysVille","country","displayElement","i","list","length","date","Date","dt_txt","temp","toCelsius","main","feels","feels_like","minT","temp_min","maxT","temp_max","humi","humidity","press","pressure","windS","wind","speed","windO","deg","clouds","all","special","weather","infos","$8DcqV","jourMeteo","push","fullDate","time","element","createElement","setAttribute","appendChild","key","weatherIcon","classList","add","src","cloudy","weatherIcon1","style","transform","winddir","getElementById","documentElement","toggle","$2c779cb429a43e0c$export$d9b246c7017176f0","Math","floor","$2c779cb429a43e0c$export$45921b0885a6b2b8","month","$2c779cb429a43e0c$export$a24aefd2b69080a9","day","$2c779cb429a43e0c$export$1711704c205b108c","type","content","parent","what","elementText","createTextNode","$2c779cb429a43e0c$export$b4ee5dce6601cbcf","icon","icone","$648b9c40212d1106$export$51edecd54dc97ef0","constructor","min","max","this","dayOfWeek","getDay","getDate","monthOfYear","getMonth","getFullYear","getHours","getMinutes","cloudOrNot","$beec938d9fda842f$var$header","$beec938d9fda842f$export$594c0b9983c36816","forecast","town","forecastInput","e","target","value","code","$9fb9u","weatherMe"],"version":3,"file":"index.dfa1c49e.js.map"}